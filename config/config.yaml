# SpringMVC Agent Analyzer Configuration

# LLM Model Configuration
llm:
  # Model routing strategy
  routing:
    # Fast screening model (cheapest)
    screening_model: "claude-3-5-haiku-20241022"
    screening_cost_per_mtok_input: 0.25
    screening_cost_per_mtok_output: 1.25

    # Main analysis model (balanced)
    analysis_model: "claude-3-5-sonnet-20250929"
    analysis_cost_per_mtok_input: 3.0
    analysis_cost_per_mtok_output: 15.0

    # Critical decisions model (most capable)
    critical_model: "claude-3-opus-20240229"
    critical_cost_per_mtok_input: 15.0
    critical_cost_per_mtok_output: 75.0

  # Confidence thresholds for model escalation
  thresholds:
    screening_confidence: 0.9  # If Haiku confidence >= 0.9, accept result
    analysis_confidence: 0.85  # If Sonnet confidence >= 0.85, accept result
    minimum_escalation: 0.7     # Don't escalate if confidence >= this (cost saving)
    # Otherwise escalate to Opus

  # API Configuration
  api:
    max_tokens: 4096
    temperature: 0.1
    timeout: 60

# Semantic Cache Configuration
cache:
  enabled: true
  similarity_threshold: 0.85  # Cache hit if similarity >= 0.85
  max_cache_size: 10000
  ttl_days: 30

# Cost Tracking
cost:
  budget_per_project: 5.0  # USD
  alert_threshold: 0.8  # Alert at 80% budget

# Agent Configuration
agents:
  # Minimum confidence threshold for accepting results
  min_confidence: 0.7

  # Confidence penalties
  structure_validation_penalty: 0.6  # Max confidence if structure validation fails

  # Max tokens per agent (scales with complexity)
  max_tokens_controller: 2048    # Simple controllers
  max_tokens_service: 2048        # Simple services
  max_tokens_jsp: 3072            # Medium - mixed HTML/Java/EL
  max_tokens_mapper: 3072         # Medium - XML + SQL
  max_tokens_procedure: 4096      # Complex - PL/SQL logic

  # Adaptive context window
  adaptive_context:
    enabled: true
    min_lines: 5
    max_lines: 50
    # Let LLM decide context size

  # Batch processing
  batch_size: 10
  max_workers: 4

# Graph Configuration
graph:
  max_depth: 10
  max_paths: 100

# Output
output:
  base_dir: "output"
  format: "json"
  save_intermediate: true
